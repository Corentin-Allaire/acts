language: cpp

# matrix:
  # include:
    # - os: linux
      # sudo: required
      # before_install:
        # - wget --no-check-certificate https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
        # - sudo dpkg -i cvmfs-release-latest_all.deb
        # - sudo apt-get update
        # - sudo apt-get install cvmfs cvmfs-config-default
        # - rm -f cvmfs-release-latest_all.deb
        # - wget --no-check-certificate https://lcd-data.web.cern.ch/lcd-data/CernVM/default.local
        # - sudo mkdir -p /etc/cvmfs
        # - sudo mv default.local /etc/cvmfs/default.local
        # - sudo /etc/init.d/autofs stop
        # - sudo cvmfs_config setup
        # - ls /cvmfs/sft.cern.ch
      # env: CI_SCRIPT=$PWD/.travis/cc7_lcg96.sh IMAGE=gitlab-registry.cern.ch/acts/machines/cc7
      # services:
        # - docker
      # script:
        # - docker run -ti --name CI_container -v ${PWD}:/src -w /src -v"/cvmfs:/cvmfs:ro" -v"$CI_SCRIPT:/entrypoint.sh:ro" -d $IMAGE /bin/bash
        # - docker exec -ti CI_container /entrypoint.sh
        #

os: linux
before_install:
  - wget --no-check-certificate https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
  - sudo dpkg -i cvmfs-release-latest_all.deb
  - sudo apt-get update
  - sudo apt-get install cvmfs cvmfs-config-default
  - rm -f cvmfs-release-latest_all.deb
  - wget --no-check-certificate https://lcd-data.web.cern.ch/lcd-data/CernVM/default.local
  - sudo mkdir -p /etc/cvmfs
  - sudo mv default.local /etc/cvmfs/default.local
  - sudo /etc/init.d/autofs stop
  - sudo cvmfs_config setup
  - ls /cvmfs/sft.cern.ch
services:
  - docker
script:
  # - ls -al
  # - ls -al .travis
  # - echo $CI_SCRIPT
  # - stat $CI_SCRIPT
  #
  - source $PWD/.travis/helpers.sh
  # - echo "export LCG=${LCG}" >> .travis/.env
  # - (echo -n "export COMMON_BUILD_OPTIONS=" && printf '%q' "\"${COMMON_BUILD_OPTIONS}\"") >> .travis/.env
  # - echo "export BUILD_TYPE=${BUILD_TYPE}" >> .travis/.env
  - echo "export LCG=$(esc_var "${LCG}")" >> .travis/.env
  # - echo "export COMMON_BUILD_OPTIONS=$(esc_var "${COMMON_BUILD_OPTIONS}")" >> .travis/.env
  - echo "export BUILD_TYPE=$(esc_var "${BUILD_TYPE}")" >> .travis/.env

  - cat .travis/.env
  - docker run -ti --name CI_container -v ${PWD}:/src -w /src -v"/cvmfs:/cvmfs:ro" -v"$CI_SCRIPT:/entrypoint.sh:ro" -d $IMAGE /bin/bash
  - docker exec -ti CI_container /entrypoint.sh

env: 
  global:
    # COMMON_BUILD_OPTIONS: "'-DCMAKE_CXX_FLAGS=\'-Werror -fdiagnostics-color=always\' -DACTS_BUILD_DIGITIZATION_PLUGIN=on -DACTS_BUILD_IDENTIFICATION_PLUGIN=on -DACTS_BUILD_JSON_PLUGIN=on -DACTS_BUILD_BENCHMARKS=on -DACTS_BUILD_FATRAS=on -DACTS_BUILD_EXAMPLES=on -DACTS_BUILD_INTEGRATIONTESTS=on -DACTS_BUILD_UNITTESTS=on'"
    BUILD_TYPE: Release
  jobs:
   - LCG=95 CI_SCRIPT=$PWD/.travis/common.sh IMAGE=gitlab-registry.cern.ch/acts/machines/cc7
   - LCG=96 CI_SCRIPT=$PWD/.travis/common.sh IMAGE=gitlab-registry.cern.ch/acts/machines/cc7
   - LCG=95 CI_SCRIPT=$PWD/.travis/common.sh IMAGE=gitlab-registry.cern.ch/acts/machines/slc6
